body {
    font-family: 'Open Sans', sans-serif;
}
h1, h2{
    text-align: center;
}
#container {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 0 auto;
    border: 5px solid #003049;
    display: flex; /* display flex will turn on the flex properties and lay the elements in the container from left to right */
    flex-direction: row; /* flex-direction will choose the direction of the elements */
    /* Notice that even though the divs are bigger than the container, they don't go past the container's border. That's because the display is set to flex. Once the container's height grows, the divs within the container do as well until they  */
    justify-content: center;
    /* justify-content determines how the actual elements of the content is distributed across the MAIN AXIS (LEFT TO RIGHT). Default is flex-start. *not always the left hand side. flex-end: moves content to the end of the main axis ie horizontal. center: obviously centered along the main axis. space-between: will add space between the elements but not between the elements and the container. space-around: gives each element the space between each element and the container. space-evenly: gives the even amount of space between the elements and container*/
    /* flex-wrap: nowrap; */
     /* flex-wrap allows the elements to not bunch up into one block and instead move over to the next one to whichever justify-content setting is currently set. */
    align-items: flex-start;
    /* align-items determines how the actual elements of the content is distributed down the CROSS AXIS (TOP TO BOTTOM). flex-start (the default) will set the elements from the top and flex-end from the bottom. baseline will set the elements' base from the content within the elements themselves */
    flex-wrap: wrap;
    /* flex-wrap is how you change the direction of the cross axis with "wrap-reverse;" */
}

#container div { 
    width: 200px;
    height: 200px;
    text-align: center;
}
