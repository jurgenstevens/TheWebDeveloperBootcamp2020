body {
    font-family: 'Open Sans', sans-serif;
}

h1 {
    font-size: 6em;
    text-align: center;
}

nav {
    font-size: 1.5em;
    display: flex;
    justify-content: space-between;
}


ul,li {
    display: inline;
    margin: 0;
    padding: 0;
}

ul {
    border: 1px solid red;
    flex: 1;
    max-width: 50%;
    display: flex;
    justify-content: space-evenly;
}
/* CSS @media queries are like javascript conditionals. If the property within the parameter is met, THEN change that element to whatever new property. */
/* @media (max-width: 800px){ */
    /* h1 { */
        /* color: purple; */
        /* width will turn the h1 purple when the h1's width is only at 800px; min-width will turn the h1 purple from 800px and upward; max-width will make the h1 purple from 0px to 800px  */
    /* } */
/* } */

@media (min-width: 600px) and (max-width: 800px){
    h1 {
        color: purple;
        /* you can also include the conditional parameteres with (conditional) and (conditional) */
    }
}

/* Working with layers and growth in screen size below by using the cascading method */
/* Start with the default color */
h1 {
    color: red;
}

@media (min-width: 500px){
    /* when the screen size grows to 500px and above, then the h1 will be orange */
    h1{
        color: orange;
    }
}

@media (min-width: 1000px){
    /* when the screen size grows to 1000px and above, then the h1 will be yellow */
    h1{
        color: yellow;
    }
}

@media (min-width: 1500px){
    /* when the screen size grows to 1500px and above, then the h1 will be green */
    h1{
        color: green;
    }
}

@media (min-width: 500px){
    /* when the screen size grows to 500px and above, then the h1 will be orange */
    h1{
        color: orange;
    }
}

/* @media (orientation: landscape) { */
    /* Orientation landscape signifies that it is vertical-desktop as opposed to vertical-mobile/ipad */
    /* body { */
        /* background-color: black; */
    /* } */
/* } */

@media (max-width: 768px){
    /* we're going to shrink anything between 768px and 577px to font-size 4em */
    h1 {
        font-size: 4em;
    }
    nav {
        flex-direction: column;
        /* Setting the nav's flex-direction to column will stack the listed items */
        align-items: center;
    }
    nav ul {
        flex-direction: column;
        /* However, because the ul has li's, they must be set as column as well */
        align-items: center;
    }
}

@media (max-width: 768px){
    /* we're going to shrink anything below 576px to font-size 2em */
    h1 {
        font-size: 2em;
    }
}