/* * {
/*  * is the universal selector and selects EVERYTHING */
    /* color: red;
    background-color: black; */
/* } */ 

body {
    background-color: #F0EDEE;
}

button {
    /* element selectors such as this one will select all elements from which you write, in this case, this will affect all buttons' css */
    font-size: 30px;
    background-color: #575A5E;
}

h1, h2 {
    /* Selectors List - we can use a comma to combine multiple selectors in a list */
    color: #222823;
}

#signup {
    /* id's should only be used ONCE. Therefore, the signup id will only be used once. That way it singles out one thing because it's a unique identifier */
    background-color: #1D3557;
    color: #F1FAEE;
}

span {
    color: #2C666E;
}

.tag {
    /* The class selector matches elements based on the contents of their class attribute. */
    background-color: #07393C;
    color: #90DDF0;
    font-size: 16px;
}

.post a {
    /* descendent selectors change the css to whatever list that nested */
    color: #2C666E;
    font-weight: 700;
    text-decoration: none;
}

footer a {
    /* ie this descendent selector will change the color of the links within the footer */
    color: #07393C;
}

h2 + button {
    font-size: 20px;
    background-color: #800020;
    /* With ADJACENT SELECTORS you can select only the elements that are immediately preceded by the first written element. In this case it would turn every button following an h2 to the color burgundy */
}

footer > a {
    /* The DIRECT CHILD SELECTOR will select only the elements that are direct children of the first element. It's a direct descendent and a general descendent further down like adjacent selectors */
    color: #A8DADC;
}

input[type="password"] {
    /* The ATTRIBUTE SELECTOR selects all input elements where the attribute typed  */
    color: red;
}  

section.post{
    /* Doing this form of ATTRIBUTE SELECTOR it will only select the sections with the class of post ie .post */
    background-color: rgb(102, 198, 184)
}

a[href*="google"]{
    /* Using *= with ATTRIBUTE SELECTORS it will change only the elements containing a certain work. Keep in mind this is CASE SENSITIVE */
    color: #800020;
}


a:hover {
    text-decoration: underline;
    /* This will add an overline when you hover over links/ANCHOR TAGS */
}

.post button:active {
    background-color: #02C39A;
    /* This will change the color to the buttons in the post class WHILE  you CLICK and HOLD, once you release, it goes back to its original color. */
}

.post:nth-of-type(2n) {
    background-color: #DFE8DC;
    /* With NTH-OF-TYPE and set to 3n, it will choose every other third. As opposed to just 3 without the n, it would just change the css to the third. For even numbers, it's 2n */
}

h2::first-letter {
    font-size: 40px;
    /* This PSEUDO ELEMENT will change the color of the first letter in every h2 */
}

p::first-line{
    /* This PSEUDO ELEMENT will change the color of the first line of every paragraph */
    color: purple;
}

p::selection {
    background-color: goldenrod;
    /* The SELECTION PSEUDO ELEMENT will apply to any part of the paragraphs that is highlighted and change the highlight to whatever background is assigned. If you take out the p element and leave it as ::selection, you can do it on any part of the document*/
}

/* ORDER MATTERS */
h1, h2 {
    color: yellow;
}

.post button:hover {
    background-color: #E63946;
    color: #F1FAEE;
    /*  PSEUDO CLASSES are keywords added to a selector that specifies a special state of the selected elements */
}

button:hover {
    background-color: olive;
    /* With SPECIFICITY, this will change the color of the buttons when hovered over, but only the ones that don't have the .post class. It is priority over this because of the class. That's SPECIFICITY */
}

/* SPECIFICITY PRIORITY ORDER:
    -ID
    -CLASS
    -ELEMENT
*/
button {
    background-color: magenta !important;
}
/* !important will override any css properties */